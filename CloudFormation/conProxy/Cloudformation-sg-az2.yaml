AWSTemplateFormatVersion: "2010-09-09"
Description: "Stack para la creación de Security Groups"

Resources:
  SecurityGroupProxyAZ2:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Security Group para el Proxy Inverso en AZ2"
      VpcId: !ImportValue equipo3-VPC-ID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0  # HTTP
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0  # HTTPS
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0  # SSH
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: "equipo3-sg-proxy-az2"

  SecurityGroupCMS:
  Type: AWS::EC2::SecurityGroup
  Properties:
    GroupDescription: "Security Group para el Servidor CMS"
    VpcId: !ImportValue equipo3-VPC-ID
    SecurityGroupIngress:
      # Permitir tráfico HTTP/HTTPS desde el Proxy Inverso (HAProxy)
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        SourceSecurityGroupId: !ImportValue equipo3-SG-HAProxy-ID  # HTTP desde HAProxy
      - IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        SourceSecurityGroupId: !ImportValue equipo3-SG-HAProxy-ID  # HTTPS desde HAProxy

      # Permitir acceso SSH solo desde Proxy Inverso o una IP específica
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        SourceSecurityGroupId: !ImportValue equipo3-SG-HAProxy-ID  # SSH seguro

      # Permitir comunicación entre los servidores CMS (si hay más de uno)
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        SourceSecurityGroupId: !Ref SecurityGroupCMS  # CMS pueden comunicarse entre sí
      - IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        SourceSecurityGroupId: !Ref SecurityGroupCMS  # CMS pueden comunicarse entre sí

      # Permitir acceso desde CMS a PostgreSQL
      - IpProtocol: tcp
        FromPort: 5432
        ToPort: 5432
        SourceSecurityGroupId: !ImportValue equipo3-SG-PostgreSQL-ID  # CMS se conecta a PostgreSQL

      # Permitir acceso desde CMS a MySQL/RDS
      - IpProtocol: tcp
        FromPort: 3306
        ToPort: 3306
        SourceSecurityGroupId: !ImportValue equipo3-SG-RDS-ID  # CMS accede a MySQL RDS

    SecurityGroupEgress:
      # Permitir tráfico saliente desde CMS hacia Internet o RDS
      - IpProtocol: -1
        CidrIp: 0.0.0.0/0

    Tags:
      - Key: Name
        Value: "equipo3-sg-cms"


  SecurityGroupRDS:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Security Group para la Base de Datos RDS"
      VpcId: !ImportValue equipo3-VPC-ID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          SourceSecurityGroupId: !Ref SecurityGroupCMS  # Permite tráfico desde CMS
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: "equipo3-sg-rds"

Outputs:
  SecurityGroupProxyId:
    Description: "ID del Security Group del Proxy"
    Value: !Ref SecurityGroupProxyAZ2
    Export:
      Name: "equipo3-SG-Proxy-AZ2-ID"

  SecurityGroupRDSId: 
    Description: "ID del Security Group de la Base de Datos RDS"
    Value: !Ref SecurityGroupRDS
    Export:
      Name: "equipo3-SG-RDS-ID"

  SecurityGroupCMSId:
    Description: "ID del Security Group del Servidor CMS"
    Value: !Ref SecurityGroupCMS
    Export:
      Name: "equipo3-SG-CMS-ID"