AWSTemplateFormatVersion: "2010-09-09"
Description: "Stack para la creaciÃ³n de instancias EC2 y RDS"

Parameters:
  KeyName:
    Type: String
    Description: "mensagl"

Resources:
  EC2ProxyAZ1:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: ami-04b4f1a9cf54c11d0 # Ubuntu Server 24.04
      KeyName: !Ref KeyName
      SubnetId: !ImportValue equipo3-SubnetPublic1-ID
      SecurityGroupIds:
        - !ImportValue equipo3-SG-Proxy-AZ1-ID
      PrivateIpAddress: 10.0.1.50
      Tags:
        - Key: Name
          Value: "equipo3-az1-proxy"
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          mkdir -p /home/ubuntu/scripts
          aws s3 cp s3://equipo3-scripts/hola.sh /home/ubuntu/scripts/hola.sh
          chmod +x /home/ubuntu/scripts/*.sh
          /home/ubuntu/scripts/setup.sh


  EC2ProxyAZ2:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: ami-04b4f1a9cf54c11d0 # Ubuntu Server 24.04
      KeyName: !Ref KeyName
      SubnetId: !ImportValue equipo3-SubnetPublic2-ID
      SecurityGroupIds:
        - !ImportValue equipo3-SG-Proxy-AZ2-ID
      PrivateIpAddress: 10.0.2.50
      Tags:
        - Key: Name
          Value: "equipo3-az2-proxy"
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          mkdir -p /home/ubuntu/log
          echo "Server iniciado" > /home/ubuntu/log/haproxy.log
          chmod 644 /home/ubuntu/log/haproxy.log  
          
  EC2Ejabberd1:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: ami-04b4f1a9cf54c11d0 # ubuntu Server 24.04
      KeyName: !Ref KeyName
      SubnetId: !ImportValue equipo3-SubnetPrivate1-ID
      SecurityGroupIds:
        - !ImportValue equipo3-SG-Ejabberd-ID
      PrivateIpAddress: 10.0.3.10
      Tags:
        - Key: Name
          Value: "equipo3-ejabberd-1"
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          mkdir -p /home/ubuntu/scripts
          aws s3 cp s3://equipo3-scripts/instalar_ejabberdcompleto.sh /home/ubuntu/scripts/instalar_ejabberdcompleto.sh
          chmod +x /home/ubuntu/scripts/*.sh
          /home/ubuntu/scripts/setup.sh

  EC2Ejabberd2:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: ami-04b4f1a9cf54c11d0 # Ubuntu Server 24.04
      KeyName: !Ref KeyName
      SubnetId: !ImportValue equipo3-SubnetPrivate1-ID
      SecurityGroupIds:
        - !ImportValue equipo3-SG-Ejabberd-ID
      PrivateIpAddress: 10.0.3.11
      Tags:
        - Key: Name
          Value: "equipo3-ejabberd-2"
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          mkdir -p /home/ubuntu/log
          echo "Server iniciado" > /home/ubuntu/log/ejabberd.log
          chmod 644 /home/ubuntu/log/ejabberd.log


  EC2PostgreSQL1:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: ami-04b4f1a9cf54c11d0 # Ubuntu Server 24.04
      KeyName: !Ref KeyName
      SubnetId: !ImportValue equipo3-SubnetPrivate1-ID
      SecurityGroupIds:
        - !ImportValue equipo3-SG-PostgreSQL-ID
      PrivateIpAddress: 10.0.3.100
      Tags:
        - Key: Name
          Value: "equipo3-az1-postgresql-1"
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          mkdir -p /home/ubuntu/log
          echo "postgree Server iniciado" > /home/ubuntu/log/postgre.log
          chmod 644 /home/ubuntu/log/postgree.log
  
  EC2PostgreSQL2:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: ami-04b4f1a9cf54c11d0 # Ubuntu Server 24.04
      KeyName: !Ref KeyName
      SubnetId: !ImportValue equipo3-SubnetPrivate1-ID
      SecurityGroupIds:
        - !ImportValue equipo3-SG-PostgreSQL-ID
      PrivateIpAddress: 10.0.3.101
      Tags:
        - Key: Name
          Value: "equipo3-az1-postgresql-2"

  EC2CMS1:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: ami-04b4f1a9cf54c11d0 # Ubuntu Server 24.04
      KeyName: !Ref KeyName
      SubnetId: !ImportValue equipo3-SubnetPrivate2-ID
      SecurityGroupIds:
        - !ImportValue equipo3-SG-CMS-ID
        - !ImportValue equipo3-SG-RDS-ID  # Asegura que CMS pueda hablar con RDS
      PrivateIpAddress: 10.0.4.10
      Tags:
        - Key: Name
          Value: "equipo3-az2-cms1"

  EC2CMS2:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: ami-04b4f1a9cf54c11d0 # Ubuntu Server 24.04
      KeyName: !Ref KeyName
      SubnetId: !ImportValue equipo3-SubnetPrivate2-ID
      SecurityGroupIds:
        - !ImportValue equipo3-SG-CMS-ID
        - !ImportValue equipo3-SG-RDS-ID  # Asegura que CMS pueda hablar con RDS
      PrivateIpAddress: 10.0.4.11
      Tags:
        - Key: Name
          Value: "equipo3-az2-cms2"

Outputs:
  EC2ProxyAZ1Id:
    Description: "ID de la instancia Proxy en AZ1"
    Value: !Ref EC2ProxyAZ1
    Export:
      Name: "equipo3-EC2-Proxy-AZ1-ID"

  EC2ProxyAZ2Id:
    Description: "ID de la instancia Proxy en AZ2"
    Value: !Ref EC2ProxyAZ2
    Export:
      Name: "equipo3-EC2-Proxy-AZ2-ID"

  EC2Ejabberd1Id:
    Description: "ID de la primera instancia Ejabberd"
    Value: !Ref EC2Ejabberd1
    Export:
      Name: "equipo3-EC2-Ejabberd-1-ID"

  EC2Ejabberd2Id:
    Description: "ID de la segunda instancia Ejabberd"
    Value: !Ref EC2Ejabberd2
    Export:
      Name: "equipo3-EC2-Ejabberd-2-ID"

  EC2PostgreSQL1Id:
    Description: "ID de la primera instancia PostgreSQL"
    Value: !Ref EC2PostgreSQL1
    Export:
      Name: "equipo3-EC2-PostgreSQL-1-ID"

  EC2PostgreSQL2Id:
    Description: "ID de la segunda instancia PostgreSQL"
    Value: !Ref EC2PostgreSQL2
    Export:
      Name: "equipo3-EC2-PostgreSQL-2-ID"

  EC2CMS1Id:
    Description: "ID de la primera instancia CMS"
    Value: !Ref EC2CMS1
    Export:
      Name: "equipo3-EC2-CMS-1-ID"

  EC2CMS2Id:
    Description: "ID de la segunda instancia CMS"
    Value: !Ref EC2CMS2
    Export:
      Name: "equipo3-EC2-CMS-2-ID"

